package de.scribble.lp.killtherng;

import de.scribble.lp.killtherng.custom.CustomRandom;
import java.util.HashMap;

public class UltimateRandomnessCommon {

	private HashMap<String, CustomRandom> REGISTRY = new HashMap<>();

	private CustomRandom registerRandom(String name, String description, boolean enabled) {
		CustomRandom newRandom = new CustomRandom(name, description, enabled);
		REGISTRY.put(name, newRandom);
		return newRandom;
	}

	public CustomRandom GlobalServer = registerRandom("GlobalServer", "The global randomness every server random variable should have", true);
	public CustomRandom trampleHeight = registerRandom("trampleHeight", "Minimum Fall Distance until farmland gets trampled", true);
	public CustomRandom runningParticle = registerRandom("runningParticle", "Position of block crack particles when running", true);
	public CustomRandom splashSound = registerRandom("splashSound", "Pitch of splash sound", true);
	public CustomRandom waterBubbleParticle = registerRandom("waterBubbleParticle", "Position of bubble particle", true);
	public CustomRandom waterSplashParticle = registerRandom("waterSplashParticle", "Position of water splash particle", true);
	public CustomRandom swimSoundPitch = registerRandom("swimSoundPitch", "Pitch of swimming entities sound", true);
	public CustomRandom fireExtinguishSoundPitch = registerRandom("fireExtinguishSoundPitch", "Pitch of burning entities extinguishing", true);
	public CustomRandom pushOutOfBlock = registerRandom("pushOutOfBlock", "Motion to push entities out of a block", true);
	public CustomRandom mesaGeneration = registerRandom("mesaGeneration", "Mesa Generation", false);
	public CustomRandom posRotTypeStronghold = registerRandom("posRotTypeStronghold", "Position, Rotation and Type of next Stronghold Piece", false);
	public CustomRandom chorusGrow = registerRandom("chorusGrow", "Random direction a chorus flower grows", true);
	public CustomRandom chorusGrowDirection = registerRandom("chorusGrowDirection", "Random direction a chorus flower grows", true);
	public CustomRandom pointlessness = registerRandom("pointlessness", "WHY IS THIS HEEEEERRRREEEEE ITS SO FUCKING USELESS AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", false);
	public CustomRandom chorusGrowHeight = registerRandom("chorusGrowHeight", "Chance for chorus fruit to grow in height", true);
	public CustomRandom chorusGrowSomething = registerRandom("chorusGrowSomething", "Something about chorus growing", true);
	public CustomRandom taigaGeneration = registerRandom("taigaGeneration", "Taiga Generation", false);
	public CustomRandom plantGeneration = registerRandom("plantGeneration", "Double Plant Generation", false);
	public CustomRandom glowstoneDrop = registerRandom("glowstoneDrop", "Quantity of glowstone drop", true);
	public CustomRandom glowstoneDropFortuneBonus = registerRandom("glowstoneDropFortuneBonus", "Quantity of bonus glowstone drop", true);
	public CustomRandom aiFleeSun = registerRandom("aiFleeSun", "Looks 10 times around the entity randomly for a shelter", true);
	public CustomRandom parrotImitatedSoundChance = registerRandom("parrotImitatedSoundChance", "If an imitated sound should play", true);
	public CustomRandom random_1022 = registerRandom("random_1022", "null", true);
	public CustomRandom random_1023 = registerRandom("random_1023", "null", true);
	public CustomRandom parrotInitialVariant = registerRandom("parrotInitialVariant", "Sets the variant of the parrot when spawning", true);
	public CustomRandom random_1019 = registerRandom("random_1019", "null", true);
	public CustomRandom random_1014 = registerRandom("random_1014", "null", true);
	public CustomRandom random_1015 = registerRandom("random_1015", "null", true);
	public CustomRandom parrotEatingSound = registerRandom("parrotEatingSound", "Pitch of parrot eating", true);
	public CustomRandom woodlandMansionRng = registerRandom("woodlandMansionRng", "Type and Direction of Woodland Mansion Pieces", false);
	public CustomRandom flowerGeneration = registerRandom("flowerGeneration", "Flower Generation", false);
	public CustomRandom fastutilArrayShuffle = registerRandom("fastutilArrayShuffle", "Shuffles arrays", false);
	public CustomRandom chunkGenEnd = registerRandom("chunkGenEnd", "Population for Chunk Generation in the end", false);
	public CustomRandom randomRegistryObject = registerRandom("randomRegistryObject", "Responsible for a random enchantment during trading and random villager professions", true);
	public CustomRandom caveGeneration = registerRandom("caveGeneration", "Cave Generation", false);
	public CustomRandom posRotTypeVillage = registerRandom("posRotTypeVillage", "Position, Rotation and Type of next Village Piece", false);
	public CustomRandom random_528 = registerRandom("random_528", "null", true);
	public CustomRandom spawnWitherParticles = registerRandom("spawnWitherParticles", "Position of smoke and mob spell particles", true);
	public CustomRandom witherHeadUpdates = registerRandom("witherHeadUpdates", "How long it takes to make the head shoot (?)", true);
	public CustomRandom random_972 = registerRandom("random_972", "null", true);
	public CustomRandom hillsGeneration = registerRandom("hillsGeneration", "Hills Generation", false);
	public CustomRandom addDragonExplosionParticles = registerRandom("addDragonExplosionParticles", "When the dragon destroys blocks, explosion particles will spawn", true);
	public CustomRandom spawnDragonDeathHugeExplosionParticle = registerRandom("spawnDragonDeathHugeExplosionParticle", "Huge explosion particles when dragon dies", true);
	public CustomRandom spawnDragonDeathExplosionParticle = registerRandom("spawnDragonDeathExplosionParticle", "Position of large explosion particles", true);
	public CustomRandom changeDragonHealingEnderCrystal = registerRandom("changeDragonHealingEnderCrystal", "Chance to change the healing crystal", true);
	public CustomRandom genMegaSpruceCrownSize = registerRandom("genMegaSpruceCrownSize", "Size of the crown from a mega spruce tree", false);
	public CustomRandom genPodzolPosOffset = registerRandom("genPodzolPosOffset", "Position offset of the generated podzol circle", false);
	public CustomRandom posRotVillage = registerRandom("posRotVillage", "Position of the Village", false);
	public CustomRandom random_512 = registerRandom("random_512", "null", true);
	public CustomRandom random_513 = registerRandom("random_513", "null", true);
	public CustomRandom random_514 = registerRandom("random_514", "null", true);
	public CustomRandom itemFrameDropChance = registerRandom("itemFrameDropChance", "Chance of not dropping the item in an item frame", true);
	public CustomRandom random_659 = registerRandom("random_659", "null", true);
	public CustomRandom random_660 = registerRandom("random_660", "null", true);
	public CustomRandom villagerSpawnPos = registerRandom("villagerSpawnPos", "Random Position for Villagers to spawn", true);
	public CustomRandom villageResetDoorOpeningRestrictionCounter = registerRandom("villageResetDoorOpeningRestrictionCounter", "Unused Code", false);
	public CustomRandom ironGolemSpawnVillage = registerRandom("ironGolemSpawnVillage", "Whether to spawn an Iron Golem in a Village or not", true);
	public CustomRandom posRotStructure = registerRandom("posRotStructure", "Position of search for nearest structure", false);
	public CustomRandom phaseHoldingPatternPerch = registerRandom("phaseHoldingPatternPerch", "If the dragon should start perching", true);
	public CustomRandom phaseHoldingPatternMoveToLocation = registerRandom("phaseHoldingPatternMoveToLocation", "Random increment in movement while navigating to the next path", true);
	public CustomRandom random_508 = registerRandom("random_508", "null", true);
	public CustomRandom random_509 = registerRandom("random_509", "null", true);
	public CustomRandom aiNearestAttackableTarget = registerRandom("aiNearestAttackableTarget", "If the entity should look for a new target", true);
	public CustomRandom random_593 = registerRandom("random_593", "null", true);
	public CustomRandom aiLookIdleStart = registerRandom("aiLookIdleStart", "If the entity should start looking around", true);
	public CustomRandom aiLookIdleLookingDirection = registerRandom("aiLookIdleLookingDirection", "In which direction the entity should look", true);
	public CustomRandom heightStructureRng = registerRandom("heightStructureRng", "Height of the structure", false);
	public CustomRandom random_571 = registerRandom("random_571", "null", true);
	public CustomRandom random_570 = registerRandom("random_570", "null", true);
	public CustomRandom leafDropSapling2 = registerRandom("leafDropSapling2", "Chance of a sapling dropped", true);
	public CustomRandom leafDropSapling = registerRandom("leafDropSapling", "Chance of a sapling dropped", true);
	public CustomRandom advancementRewardsLoot = registerRandom("advancementRewardsLoot", "Map makers can decide on random rewards for advancements", true);
	public CustomRandom poisonousPotatoDrop = registerRandom("poisonousPotatoDrop", "Chance of posonous potato dropping", true);
	public CustomRandom random_950 = registerRandom("random_950", "null", true);
	public CustomRandom random_947 = registerRandom("random_947", "null", true);
	public CustomRandom random_948 = registerRandom("random_948", "null", true);
	public CustomRandom random_949 = registerRandom("random_949", "null", true);
	public CustomRandom melonDrop = registerRandom("melonDrop", "Quantity of melon drop", true);
	public CustomRandom bonusMelonDrop = registerRandom("bonusMelonDrop", "Quantity of bonus melon drop", true);
	public CustomRandom biomeLocationGeneration = registerRandom("biomeLocationGeneration", "Biome Generation", false);
	public CustomRandom random_775 = registerRandom("random_775", "null", true);
	public CustomRandom random_776 = registerRandom("random_776", "null", true);
	public CustomRandom jungleGeneration = registerRandom("jungleGeneration", "Jungle Generation", false);
	public CustomRandom pumpkinPositionGen = registerRandom("pumpkinPositionGen", "Position for Pumpkin ", false);
	public CustomRandom aiFollowGolemTakeRose = registerRandom("aiFollowGolemTakeRose", "How long it takes until entity takes a rose from the golem", true);
	public CustomRandom math_random_58 = registerRandom("math_random_58", "null", true);
	public CustomRandom randomFacing = registerRandom("randomFacing", "A random facing direction", true);
	public CustomRandom leafOldDropApple = registerRandom("leafOldDropApple", "Chance of alpha leaves dropping an apple on leaf break", true);
	public CustomRandom mushroomGeneration = registerRandom("mushroomGeneration", "Mushroom Generation", false);
	public CustomRandom enderPearlParticle = registerRandom("enderPearlParticle", "Particle of ender pearl", true);
	public CustomRandom blazePlaySound = registerRandom("blazePlaySound", "Chance for blazes to play their sound", true);
	public CustomRandom blazeHeightOffset = registerRandom("blazeHeightOffset", "How high the blaze will fly after a certain time (?)", true);
	public CustomRandom redstoneTorchBurnoutSound = registerRandom("redstoneTorchBurnoutSound", "Sound of redstone torch burning out", true);
	public CustomRandom redstoneTorchBurnoutParticles = registerRandom("redstoneTorchBurnoutParticles", "Particles of redstone torch burning out", true);
	public CustomRandom eggChickChance = registerRandom("eggChickChance", "Chance of chick spawning from a thrown egg", true);
	public CustomRandom eggFourChickChance = registerRandom("eggFourChickChance", "Chance of 4 chicks spawning from a thrown egg", true);
	public CustomRandom posRotTypeNetherBridge = registerRandom("posRotTypeNetherBridge", "Position, Rotation and Type of next Nether Bridge Piece", false);
	public CustomRandom phaseTakeoffMoveToLocation = registerRandom("phaseTakeoffMoveToLocation", "Random increment in movement while navigating to the next path", true);
	public CustomRandom spitInaccuracy = registerRandom("spitInaccuracy", "Adding inaccuracy to the shot", true);
	public CustomRandom aiVillagerMateStart = registerRandom("aiVillagerMateStart", "If the villager should start mating", true);
	public CustomRandom aiVillagerMateSetEntityState = registerRandom("aiVillagerMateSetEntityState", "Unused method???", true);
	public CustomRandom enchantLevel = registerRandom("enchantLevel", "Random Enchantment Level", true);
	public CustomRandom enchantMent = registerRandom("enchantMent", "Random Enchantment for Level", true);
	public CustomRandom enchantibiliyRandom = registerRandom("enchantibiliyRandom", "Calculates whether an Item is enchantable with set enchantment", true);
	public CustomRandom enchantmentHelperDamageItem = registerRandom("enchantmentHelperDamageItem", "Selects the armor piece that should be damaged from thorns", true);
	public CustomRandom random_944 = registerRandom("random_944", "null", true);
	public CustomRandom random_945 = registerRandom("random_945", "null", true);
	public CustomRandom sandGeneration = registerRandom("sandGeneration", "Sand Generation", false);
	public CustomRandom genTreeHeight = registerRandom("genTreeHeight", "Height for trees", false);
	public CustomRandom genTreeVine = registerRandom("genTreeVine", "Chance of vine generating on tree", false);
	public CustomRandom genTreeVineSpread = registerRandom("genTreeVineSpread", "If a vine should spread", false);
	public CustomRandom genTreeVineLength = registerRandom("genTreeVineLength", "The length of a vine generating on a tree", false);
	public CustomRandom genTreeCocoaChance = registerRandom("genTreeCocoaChance", "If a cocoa should be added to a tree", false);
	public CustomRandom genTreeCocoaAmount = registerRandom("genTreeCocoaAmount", "How many cocoas should be added", false);
	public CustomRandom genTreeCocoaAge = registerRandom("genTreeCocoaAge", "The grow state of a generated cocoa bean", false);
	public CustomRandom caveGenNether = registerRandom("caveGenNether", "Cave Shape in the nether", false);
	public CustomRandom gravelDropFlint = registerRandom("gravelDropFlint", "If gravel frops flint or itself", true);
	public CustomRandom phaseDyingParticle = registerRandom("phaseDyingParticle", "Position of huge explosions during phase dying", true);
	public CustomRandom random_667 = registerRandom("random_667", "null", true);
	public CustomRandom random_668 = registerRandom("random_668", "null", true);
	public CustomRandom random_669 = registerRandom("random_669", "null", true);
	public CustomRandom batPlayAmbientSound = registerRandom("batPlayAmbientSound", "Plays the ambient entity bat sound", true);
	public CustomRandom random_923 = registerRandom("random_923", "null", true);
	public CustomRandom random_924 = registerRandom("random_924", "null", true);
	public CustomRandom batHangingRandomHeadRotation = registerRandom("batHangingRandomHeadRotation", "Chance of rotating the bats head when it's hanging from a block", true);
	public CustomRandom lootTableShuffleItems = registerRandom("lootTableShuffleItems", "Shuffles items?", true);
	public CustomRandom dragoneggTeleportPos = registerRandom("dragoneggTeleportPos", "The position of the dragon egg after the player interacts with it", true);
	public CustomRandom posRotTypeOceanMonument = registerRandom("posRotTypeOceanMonument", "Position, Rotation and Type of next Ocean Monument Piece", false);
	public CustomRandom enderCrystalRotationOffset = registerRandom("enderCrystalRotationOffset", "Offsetting the crystal animation", true);
	public CustomRandom random_1261 = registerRandom("random_1261", "null", true);
	public CustomRandom random_1262 = registerRandom("random_1262", "null", true);
	public CustomRandom random_1263 = registerRandom("random_1263", "null", true);
	public CustomRandom mineableGeneration = registerRandom("mineableGeneration", "Minables Generation", false);
	public CustomRandom random_655 = registerRandom("random_655", "null", true);
	public CustomRandom fireworkMotion = registerRandom("fireworkMotion", "Motion of the firework rocket", true);
	public CustomRandom fireworkLifetime = registerRandom("fireworkLifetime", "Lifetime of the firework rocket", true);
	public CustomRandom fireworkParticle = registerRandom("fireworkParticle", "Position of fireworkSparks", true);
	public CustomRandom random_675 = registerRandom("random_675", "null", true);
	public CustomRandom lavaFireSpreadChanceAndAmount = registerRandom("lavaFireSpreadChanceAndAmount", "Chance of fire spreading and how much spreads", true);
	public CustomRandom lavaFireSpreadPos = registerRandom("lavaFireSpreadPos", "Position of next fire spread", true);
	public CustomRandom math_random_1 = registerRandom("math_random_1", "null", true);
	public CustomRandom math_random_2 = registerRandom("math_random_2", "null", true);
	public CustomRandom math_random_3 = registerRandom("math_random_3", "null", true);
	public CustomRandom damageHeadgearFromFallingBlock = registerRandom("damageHeadgearFromFallingBlock", "Applies damage to headgear when anvil or a block is damaging the player", true);
	public CustomRandom math_random_4 = registerRandom("math_random_4", "null", true);
	public CustomRandom math_random_5 = registerRandom("math_random_5", "null", true);
	public CustomRandom math_random_6 = registerRandom("math_random_6", "null", true);
	public CustomRandom math_random_7 = registerRandom("math_random_7", "null", true);
	public CustomRandom math_random_8 = registerRandom("math_random_8", "null", true);
	public CustomRandom entityTeleportParticle = registerRandom("entityTeleportParticle", "Position and velocity of portal particles after an entity teleports", true);
	public CustomRandom crammingApplience = registerRandom("crammingApplience", "If entity cramming gets applied", true);
	public CustomRandom respirationDecrementAirSupply = registerRandom("respirationDecrementAirSupply", "Decrease or not decrease air supply while having a respiration enchantment", true);
	public CustomRandom soundPitchChild = registerRandom("soundPitchChild", "Change the pitch of the sound when the entity is a child", true);
	public CustomRandom soundPitch = registerRandom("soundPitch", "Change the pitch of the sound", true);
	public CustomRandom knockBackResistance = registerRandom("knockBackResistance", "If knockback resistance is applied", true);
	public CustomRandom deathDustParticles = registerRandom("deathDustParticles", "Position of the dust clouds when dying", true);
	public CustomRandom spawnWaterbubbleWhenDrowning = registerRandom("spawnWaterbubbleWhenDrowning", "Spawns waterbubbles when entity is drowning", true);
	public CustomRandom brokenItemSound = registerRandom("brokenItemSound", "Pitch when an item breaks in your hand", true);
	public CustomRandom brokenItemParticles = registerRandom("brokenItemParticles", "Particles when item in hand breaks", true);
	public CustomRandom math_random_9 = registerRandom("math_random_9", "null", true);
	public CustomRandom drinkAndEatSound = registerRandom("drinkAndEatSound", "Pitch of eating and drinking sounds", true);
	public CustomRandom math_random_10 = registerRandom("math_random_10", "null", true);
	public CustomRandom potionParticlesInvisible = registerRandom("potionParticlesInvisible", "Whether or not it should spawn potion effects when invisible", true);
	public CustomRandom potionParticles = registerRandom("potionParticles", "Whether or not it should spawn potion effects", true);
	public CustomRandom potionParticlesHidden = registerRandom("potionParticlesHidden", "Whether or not it should spawn potion effects when particles are hidden", true);
	public CustomRandom potionParticlesPosition = registerRandom("potionParticlesPosition", "Position of the potion particles", true);
	public CustomRandom spikeGeneration = registerRandom("spikeGeneration", "Spike Generation", false);
	public CustomRandom evokerFangCritParticles = registerRandom("evokerFangCritParticles", "Particles of evoker fangs", true);
	public CustomRandom cropDrop = registerRandom("cropDrop", "Chance for a crop to drop + quantity", true);
	public CustomRandom cropGrow = registerRandom("cropGrow", "Chance for a crop to grow", true);
	public CustomRandom random_859 = registerRandom("random_859", "null", true);
	public CustomRandom con = registerRandom("con", "Connection Stuff", false);
	public CustomRandom aiLookAtVillagerLook = registerRandom("aiLookAtVillagerLook", "If the entity should look at a villager", true);
	public CustomRandom forestGenration = registerRandom("forestGenration", "Forest Generation", false);
	public CustomRandom random_601 = registerRandom("random_601", "null", true);
	public CustomRandom blockRotationProcess = registerRandom("blockRotationProcess", "Rotation of block when being generated", true);
	public CustomRandom random_1031 = registerRandom("random_1031", "null", true);
	public CustomRandom swampGeneration = registerRandom("swampGeneration", "Swamp Generation", false);
	public CustomRandom random_1030 = registerRandom("random_1030", "null", true);
	public CustomRandom random_334 = registerRandom("random_334", "null", true);
	public CustomRandom random_335 = registerRandom("random_335", "null", true);
	public CustomRandom random_336 = registerRandom("random_336", "null", true);
	public CustomRandom random_337 = registerRandom("random_337", "null", true);
	public CustomRandom zombieVillagerConvertionSpeedup = registerRandom("zombieVillagerConvertionSpeedup", "There is a chance to speedup convertion progress", true);
	public CustomRandom zombieVillagerChildrenPitch = registerRandom("zombieVillagerChildrenPitch", "Get's a different pitch dependant if the villager is a child or an adult", true);
	public CustomRandom zombieVillagerConvertionTime = registerRandom("zombieVillagerConvertionTime", "How long the z villager will take to convert to a villager", true);
	public CustomRandom lakePlaneGen = registerRandom("lakePlaneGen", "Lake Plane for Generation", false);
	public CustomRandom aiSwimmingSetJumping = registerRandom("aiSwimmingSetJumping", "Set's the entity to jumping to simulate swimming", true);
	public CustomRandom commandGiveSound = registerRandom("commandGiveSound", "Pitch of item being picked up sound when doing /give", true);
	public CustomRandom endCityPos = registerRandom("endCityPos", "End City Position", false);
	public CustomRandom spawnPosWorldGen = registerRandom("spawnPosWorldGen", "Spawn Position of the player when creating a new world", true);
	public CustomRandom aiSkeletonRidersAddEnchantmentToMainhand = registerRandom("aiSkeletonRidersAddEnchantmentToMainhand", "What enchantment should be added to the item in the main hand", true);
	public CustomRandom aiSkeletonRidersAddVelocity = registerRandom("aiSkeletonRidersAddVelocity", "How much velocity should be added to the skeleton horse", true);
	public CustomRandom posRotStronghold = registerRandom("posRotStronghold", "Position of the Stronghold", false);
	public CustomRandom wolfAmbientSound = registerRandom("wolfAmbientSound", "Whether the wolf makes an ambient sound or health related sounds", true);
	public CustomRandom wolfShakeSound = registerRandom("wolfShakeSound", "Pitch of wolf shaking sound", true);
	public CustomRandom wolfTamingChance = registerRandom("wolfTamingChance", "If taming is successful", true);
	public CustomRandom ageableGrowUpParticle = registerRandom("ageableGrowUpParticle", "Particles when a child grows up", true);
	public CustomRandom random_855 = registerRandom("random_855", "null", true);
	public CustomRandom random_804 = registerRandom("random_804", "null", true);
	public CustomRandom aiWatchClosestStart = registerRandom("aiWatchClosestStart", "If the entity should look at another entity", true);
	public CustomRandom aiWatchClosestDuration = registerRandom("aiWatchClosestDuration", "How long the entity should look at another entity", true);
	public CustomRandom netherWartDrop = registerRandom("netherWartDrop", "Quantity of nether warts dropped", true);
	public CustomRandom netherWartDropFortuneBonus = registerRandom("netherWartDropFortuneBonus", "Quantity of fortune bonus", true);
	public CustomRandom netherWartGrowChance = registerRandom("netherWartGrowChance", "Chance of nether wart growing", true);
	public CustomRandom random_890 = registerRandom("random_890", "null", true);
	public CustomRandom populationGeneration = registerRandom("populationGeneration", "Grass, Flowers population generation", false);
	public CustomRandom random_835 = registerRandom("random_835", "null", true);
	public CustomRandom snowGeneration = registerRandom("snowGeneration", "Snow Generation", false);
	public CustomRandom posRotTypeMineshaft = registerRandom("posRotTypeMineshaft", "Position, Rotation and Type of next Mineshaft Piece", false);
	public CustomRandom savannaGeneration = registerRandom("savannaGeneration", "Savanna Generation", false);
	public CustomRandom random_800 = registerRandom("random_800", "null", true);
	public CustomRandom random_801 = registerRandom("random_801", "null", true);
	public CustomRandom random_802 = registerRandom("random_802", "null", true);
	public CustomRandom random_799 = registerRandom("random_799", "null", true);
	public CustomRandom lootEnchantRandomly = registerRandom("lootEnchantRandomly", "Enchant items randomly", true);
	public CustomRandom mobPlayerShieldCooldown = registerRandom("mobPlayerShieldCooldown", "Whether there will be a cooldown applied when using a shield and getting attacked", true);
	public CustomRandom mobSpawningLightLevel = registerRandom("mobSpawningLightLevel", "If a mob should spawn below a certain light level", true);
	public CustomRandom illuasionIllagerSound = registerRandom("illuasionIllagerSound", "Sound of IllusionIllager shooting an arrow", true);
	public CustomRandom illusionIllagerIllusionPosition = registerRandom("illusionIllagerIllusionPosition", "Where the illusions will be places", true);
	public CustomRandom deadBushPosition = registerRandom("deadBushPosition", "Dead Bush Position when being generated", false);
	public CustomRandom cauldronFillWIthRain = registerRandom("cauldronFillWIthRain", "Chance of a cauldron increasing the water level during rain", true);
	public CustomRandom genHugeTreeHeight = registerRandom("genHugeTreeHeight", "Height of a huge tree", false);
	public CustomRandom genHugeTreeExtraHeight = registerRandom("genHugeTreeExtraHeight", "Extra height of a huge tree", false);
	public CustomRandom endermanTeleportAwayWhenEntityIsNearby = registerRandom("endermanTeleportAwayWhenEntityIsNearby", "After attacking or something there is a chance enderman won't teleport away", true);
	public CustomRandom endermanParticle = registerRandom("endermanParticle", "Position of 'Portal' particles on an enderman", true);
	public CustomRandom endermanTeleportRandomly = registerRandom("endermanTeleportRandomly", "Teleports enderman to a random location (Coords are randomized)", true);
	public CustomRandom endermanTeleportToEntity = registerRandom("endermanTeleportToEntity", "Teleports enderman to near to the targeted entity (Coords are kinda randomized)", true);
	public CustomRandom endermanInitiateTeleportRandomly = registerRandom("endermanInitiateTeleportRandomly", "Enderman loses interest when in daylight and starts teleporting randomly", true);
	public CustomRandom wheatSeedRandom = registerRandom("wheatSeedRandom", "Amount of wheat seeds to drop", true);
	public CustomRandom random_644 = registerRandom("random_644", "null", true);
	public CustomRandom random_338 = registerRandom("random_338", "null", true);
	public CustomRandom randomUUID = registerRandom("randomUUID", "Creates a new UUID for entities", false);
	public CustomRandom random_340 = registerRandom("random_340", "null", true);
	public CustomRandom random_339 = registerRandom("random_339", "null", true);
	public CustomRandom tippedArrowParticle = registerRandom("tippedArrowParticle", "Position of potion particle on a tipped arrow", true);
	public CustomRandom random_462 = registerRandom("random_462", "null", true);
	public CustomRandom random_463 = registerRandom("random_463", "null", true);
	public CustomRandom random_464 = registerRandom("random_464", "null", true);
	public CustomRandom random_465 = registerRandom("random_465", "null", true);
	public CustomRandom areaEffectCloudStuff = registerRandom("areaEffectCloudStuff", "Area affect cloud particle stuff", true);
	public CustomRandom lavaFlow = registerRandom("lavaFlow", "If lava should spread", true);
	public CustomRandom random_957 = registerRandom("random_957", "null", true);
	public CustomRandom random_958 = registerRandom("random_958", "null", true);
	public CustomRandom random_959 = registerRandom("random_959", "null", true);
	public CustomRandom random_563 = registerRandom("random_563", "null", true);
	public CustomRandom random_562 = registerRandom("random_562", "null", true);
	public CustomRandom phaseLandingParticle = registerRandom("phaseLandingParticle", "Particles for dragon breath...", true);
	public CustomRandom random_572 = registerRandom("random_572", "null", true);
	public CustomRandom posRotMineshaft = registerRandom("posRotMineshaft", "Position of the Mineshaft", false);
	public CustomRandom pigZombieAngerLevel = registerRandom("pigZombieAngerLevel", "Adds a random amount to the base anger level", true);
	public CustomRandom pigZombieSound = registerRandom("pigZombieSound", "Pitch of zombie piglin", true);
	public CustomRandom aiDefendVillageCheckForEnemyPlayer = registerRandom("aiDefendVillageCheckForEnemyPlayer", "If the entity should look for a player with low reputation as a target", true);
	public CustomRandom randomPositionGenerator = registerRandom("randomPositionGenerator", "Random for determining the coordinates of an entity, used by AI tasks", true);
	public CustomRandom witchWeaknessPotion = registerRandom("witchWeaknessPotion", "If the witch should consider throwing a weakness potion", true);
	public CustomRandom witchDrinkPotion = registerRandom("witchDrinkPotion", "Chooses the potion for the witch to drink", true);
	public CustomRandom random_1374 = registerRandom("random_1374", "null", true);
	public CustomRandom aiWanderAvoidWater = registerRandom("aiWanderAvoidWater", "If the entity looks for a place outside the water or just a random position", true);
	public CustomRandom mushroomSpreadChance = registerRandom("mushroomSpreadChance", "Chance of a mushroom spreading to surrounding blocks", true);
	public CustomRandom mushroomSpreadPosition = registerRandom("mushroomSpreadPosition", "Position of the next mushroom around the current one", true);
	public CustomRandom desertGeneration = registerRandom("desertGeneration", "Desert Generation", false);
	public CustomRandom tallgrassGeneration = registerRandom("tallgrassGeneration", "Tallgrass Generation", false);
	public CustomRandom random_856 = registerRandom("random_856", "null", true);
	public CustomRandom random_857 = registerRandom("random_857", "null", true);
	public CustomRandom cocoaGrow = registerRandom("cocoaGrow", "Chance for cocoa to grow", true);
	public CustomRandom random_803 = registerRandom("random_803", "null", true);
	public CustomRandom random_651 = registerRandom("random_651", "null", true);
	public CustomRandom random_649 = registerRandom("random_649", "null", true);
	public CustomRandom random_650 = registerRandom("random_650", "null", true);
	public CustomRandom shrubGeneration = registerRandom("shrubGeneration", "Shrub Generation", false);
	public CustomRandom random_346 = registerRandom("random_346", "null", true);
	public CustomRandom random_345 = registerRandom("random_345", "null", true);
	public CustomRandom random_956 = registerRandom("random_956", "null", true);
	public CustomRandom random_510 = registerRandom("random_510", "null", true);
	public CustomRandom shulkerbulletRandomDirection = registerRandom("shulkerbulletRandomDirection", "What direction the bullet should go if no target is specified", true);
	public CustomRandom genMegaJungleHeight = registerRandom("genMegaJungleHeight", "Height of jungle tree", false);
	public CustomRandom genMegaJungleCrown = registerRandom("genMegaJungleCrown", "Crown of jungle tree", false);
	public CustomRandom genMegaJungleVine = registerRandom("genMegaJungleVine", "If a vine should be placed", false);
	public CustomRandom aiLeapAtTargetLeapChance = registerRandom("aiLeapAtTargetLeapChance", "If the entity should leap at the target", true);
	public CustomRandom genDarkOakTreeHeight = registerRandom("genDarkOakTreeHeight", "Height of dark oak tree", false);
	public CustomRandom genDarkOakTreeTrunk = registerRandom("genDarkOakTreeTrunk", "Trunk of dark oak tree", false);
	public CustomRandom genDarkOakTreeExtraLeaves = registerRandom("genDarkOakTreeExtraLeaves", "Some extra leaves?", false);
	public CustomRandom genDarkOakTreeExtraTrunk = registerRandom("genDarkOakTreeExtraTrunk", "Some extra trunks?", false);
	public CustomRandom random_531 = registerRandom("random_531", "null", true);
	public CustomRandom random_532 = registerRandom("random_532", "null", true);
	public CustomRandom random_881 = registerRandom("random_881", "null", true);
	public CustomRandom random_882 = registerRandom("random_882", "null", true);
	public CustomRandom random_883 = registerRandom("random_883", "null", true);
	public CustomRandom random_884 = registerRandom("random_884", "null", true);
	public CustomRandom oreLapisAmount = registerRandom("oreLapisAmount", "How much lapis you get", true);
	public CustomRandom oreFortuneBonus = registerRandom("oreFortuneBonus", "How much extra ore drop you get with fortune", true);
	public CustomRandom randomEquipmentSlot = registerRandom("randomEquipmentSlot", "What equipment slot the random item should have", true);
	public CustomRandom seedFromDoublePlant = registerRandom("seedFromDoublePlant", "If a seed is dropped from a double grass", true);
	public CustomRandom aiBeg = registerRandom("aiBeg", "How long a wolf should beg for the item in the players hands", true);
	public CustomRandom lightningAimForEntity = registerRandom("lightningAimForEntity", "Lightning aims for an entity in a radius where it's about to strike. If multiple entities are found this random variable selects the entity", true);
	public CustomRandom bonusChestPos = registerRandom("bonusChestPos", "The spawn position of the bonus chest", true);
	public CustomRandom spawnPos = registerRandom("spawnPos", "Creates a spawn position at random within 256 blocks of 0,0", true);
	public CustomRandom checkLightPlayer = registerRandom("checkLightPlayer", "Selects the player where the light should be checked", true);
	public CustomRandom checkLightPosition = registerRandom("checkLightPosition", "The position, where the light should be checked", true);
	public CustomRandom lightningChance = registerRandom("lightningChance", "The chance of lightning striking during thunderstorm", true);
	public CustomRandom spawnSkeletonRiders = registerRandom("spawnSkeletonRiders", "The chance of skeletonRiders spawn on a lightning strike", true);
	public CustomRandom addSnowBlocks = registerRandom("addSnowBlocks", "If ice and snow form during snow storm", true);
	public CustomRandom blockGeneration = registerRandom("blockGeneration", "Block Generation", false);
	public CustomRandom netherBridgeSpawnPos = registerRandom("netherBridgeSpawnPos", "Nether Brige Spawn Position", false);
	public CustomRandom mobspawnerXpAmount = registerRandom("mobspawnerXpAmount", "Amount of xp dropped by a mob spawner", true);
	public CustomRandom phaseStrafePlayerRotation = registerRandom("phaseStrafePlayerRotation", "If the dragon should go clockwise or counterclockwise when finding a new target", true);
	public CustomRandom phaseStrafePlayerMoveToLocation = registerRandom("phaseStrafePlayerMoveToLocation", "Random increment in movement while navigating to the next path", true);
	public CustomRandom netherPerlinGen = registerRandom("netherPerlinGen", "Terrain Bumpyness in the Nether", false);
	public CustomRandom netherPopulationGen = registerRandom("netherPopulationGen", "Nether population and structures", false);
	public CustomRandom horseVariantChild = registerRandom("horseVariantChild", "Sets the horse variant for the child", true);
	public CustomRandom horseInitialVariant = registerRandom("horseInitialVariant", "Picks a random variant if genes are not set", true);
	public CustomRandom horseBreathSound = registerRandom("horseBreathSound", "Plays horse breath sound", true);
	public CustomRandom leafNewDropApple = registerRandom("leafNewDropApple", "Chance of leaves dropping an apple on leaf break", true);
	public CustomRandom villagerLookingForVillage = registerRandom("villagerLookingForVillage", "Time it takes until the villager checks if a village is nearby", true);
	public CustomRandom villagerTradingXp = registerRandom("villagerTradingXp", "How much xp will be spawned after trading", true);
	public CustomRandom checkAndDropBeetroot = registerRandom("checkAndDropBeetroot", "Chance per tick of dropping beetroot if block below isn't sustainable for beetroot", true);
	public CustomRandom mushroomHugeDrop = registerRandom("mushroomHugeDrop", "Quantity of huge mushroom drop", true);
	public CustomRandom chestHorseSound = registerRandom("chestHorseSound", "Pitch of donkey chest sound", true);
	public CustomRandom dungeonPos = registerRandom("dungeonPos", "Position for Dungeons", false);
	public CustomRandom guardianTailAnimation = registerRandom("guardianTailAnimation", "Offsets tail animation", true);
	public CustomRandom guardianSpawning = registerRandom("guardianSpawning", "Whether the guardian can spawn at this location", true);
	public CustomRandom guardianClientSpikesAnimation = registerRandom("guardianClientSpikesAnimation", "Random spike animation (?)", true);
	public CustomRandom tameableParticle = registerRandom("tameableParticle", "Position and velocity of taming particles", true);
	public CustomRandom fireballRandomAccelleration = registerRandom("fireballRandomAccelleration", "Accelleration of the fireball", true);
	public CustomRandom anvilFallingDamage = registerRandom("anvilFallingDamage", "If anvil get's damaged when falling", true);
	public CustomRandom random_607 = registerRandom("random_607", "null", true);
	public CustomRandom random_608 = registerRandom("random_608", "null", true);
	public CustomRandom random_819 = registerRandom("random_819", "null", true);
	public CustomRandom minecartTNTFuse = registerRandom("minecartTNTFuse", "The time it takes to explode the minecart", true);
	public CustomRandom aiAttackRangedBowStrafeClockwise = registerRandom("aiAttackRangedBowStrafeClockwise", "If entity should change directions after 20 ticks, to the left or to the right", true);
	public CustomRandom random_889 = registerRandom("random_889", "null", true);
	public CustomRandom aiWander = registerRandom("aiWander", "When entity starts to wander around", true);
	public CustomRandom phaseLandingApproachMoveToLocation = registerRandom("phaseLandingApproachMoveToLocation", "Random increment in movement while navigating to the next path", true);
	public CustomRandom random_657 = registerRandom("random_657", "null", true);
	public CustomRandom random_658 = registerRandom("random_658", "null", true);
	public CustomRandom fireSpreading = registerRandom("fireSpreading", "Chance whether fire can spread", true);
	public CustomRandom catchFireChance = registerRandom("catchFireChance", "Chance for a block to catch on fire", true);
	public CustomRandom catchFireAge = registerRandom("catchFireAge", "Increases the age of the fire by a random amount", true);
	public CustomRandom fireSelfExtinguish = registerRandom("fireSelfExtinguish", "Chance of the fire extinguishing itself", true);
	public CustomRandom fireIncreaseAge = registerRandom("fireIncreaseAge", "Amount to increase the age of the fire", true);
	public CustomRandom fireUpdateDelay = registerRandom("fireUpdateDelay", "Amount of delay before the fire updates", true);
	public CustomRandom fireNonFlammableExtinguish = registerRandom("fireNonFlammableExtinguish", "Chance of a non flammable block extinguishes itself", true);
	public CustomRandom fireClusterChance = registerRandom("fireClusterChance", "Chance of increasing age when fire is in a fire cluster", true);
	public CustomRandom fireClusterIncreaseAge = registerRandom("fireClusterIncreaseAge", "Amount to increase age when in a fire cluster", true);
	public CustomRandom random_979 = registerRandom("random_979", "null", true);
	public CustomRandom random_980 = registerRandom("random_980", "null", true);
	public CustomRandom random_981 = registerRandom("random_981", "null", true);
	public CustomRandom zombieReinforcementsChance = registerRandom("zombieReinforcementsChance", "Spawn with having reinforcements?", true);
	public CustomRandom zombieIgniteOtherMobs = registerRandom("zombieIgniteOtherMobs", "Ignites other mobs while being on fire", true);
	public CustomRandom zombieReinforcementsApply = registerRandom("zombieReinforcementsApply", "If the zombie calls in other zombies in hard mode", true);
	public CustomRandom zombieCanPickupLoot = registerRandom("zombieCanPickupLoot", "If the zombie is able to pickup loot", true);
	public CustomRandom zombieConvertToZombieVillager = registerRandom("zombieConvertToZombieVillager", "If the villager killed by the zombie will transform into a zombie villager", true);
	public CustomRandom zombieFireChance = registerRandom("zombieFireChance", "Chance of lighting Zombie on fire", true);
	public CustomRandom zombieSetEquipment = registerRandom("zombieSetEquipment", "Set an item to the main hand based on difficulty", true);
	public CustomRandom iceSpikeGeneration = registerRandom("iceSpikeGeneration", "Ice Spike Generation", false);
	public CustomRandom rabbitKillerAttackSound = registerRandom("rabbitKillerAttackSound", "Pitch of the sound when the killer rabbit attacks", true);
	public CustomRandom rabbitChildRandomType = registerRandom("rabbitChildRandomType", "If the variant of the child is random", true);
	public CustomRandom rabbitEatingParticle = registerRandom("rabbitEatingParticle", "Location of the carrot eating particles", true);
	public CustomRandom rabbitRandomVariant = registerRandom("rabbitRandomVariant", "Which variant the rabbit will have", true);
	public CustomRandom rabbitJumpingSound = registerRandom("rabbitJumpingSound", "Pitch of rabbit jumping", true);
	public CustomRandom rabbitCarrotEatenSpeed = registerRandom("rabbitCarrotEatenSpeed", "How fast a rabbit eats a carrot", true);
	public CustomRandom playerShieldCooldown = registerRandom("playerShieldCooldown", "If the shield cooldown should be applied", true);
	public CustomRandom playerShieldDisablePitch = registerRandom("playerShieldDisablePitch", "Pitch of the sound when disabling a shield", true);
	public CustomRandom playerDropAroundWhenDyingMotion = registerRandom("playerDropAroundWhenDyingMotion", "Motion of the items when player dies", true);
	public CustomRandom playerDropItemMotion = registerRandom("playerDropItemMotion", "Motion of the items when dropped", true);
	public CustomRandom playerNextXpSeed = registerRandom("playerNextXpSeed", "What the next xp seed is", true);
	public CustomRandom playerReadXpSeed = registerRandom("playerReadXpSeed", "Setting xp seed when no xp seed was found in the nbt", true);
	public CustomRandom random_898 = registerRandom("random_898", "null", true);
	public CustomRandom random_899 = registerRandom("random_899", "null", true);
	public CustomRandom sulkerTeleportOnHealthLoss = registerRandom("sulkerTeleportOnHealthLoss", "Whether the shulker teleports after taking damage", true);
	public CustomRandom shulkerTeleportToBlockPos = registerRandom("shulkerTeleportToBlockPos", "Coordinate to teleport to", true);
	public CustomRandom entitySpawnPos = registerRandom("entitySpawnPos", "Finds a random positon in a chunk", true);
	public CustomRandom entitySpawnPosMR = registerRandom("entitySpawnPosMR", "Finds a random positon in a chunk", true);
	public CustomRandom entitySpawnPosWorldGen = registerRandom("entitySpawnPosWorldGen", "Finds an Entity and the position where to spawn during world gen", false);
	public CustomRandom random_529 = registerRandom("random_529", "null", true);
	public CustomRandom posRotTypeEndCity = registerRandom("posRotTypeEndCity", "Position, Rotation and Type of next End Piece", false);
	public CustomRandom dropItemPositionOffset = registerRandom("dropItemPositionOffset", "Offset of Dropped Items", true);
	public CustomRandom dropItemCount = registerRandom("dropItemCount", "Stack Count of Items dropped or split into another item stack", true);
	public CustomRandom dropItemVelocity = registerRandom("dropItemVelocity", "Velocity of Dropped Items", true);
	public CustomRandom worldGenUtil = registerRandom("worldGenUtil", "World Generation Utility", false);
	public CustomRandom skeletonShootSound = registerRandom("skeletonShootSound", "Pitch of Skeleton Shooting", true);
	public CustomRandom skeletonCanPickupLoot = registerRandom("skeletonCanPickupLoot", "Sets if the skeleton can pick up loot when spawning", true);
	public CustomRandom skeletonFireChance = registerRandom("skeletonFireChance", "Chance of setting the skeleton on fire", true);
	public CustomRandom genBirchTreeHeight = registerRandom("genBirchTreeHeight", "Height of a birch tree", false);
	public CustomRandom genBirchTreeExtraHeight = registerRandom("genBirchTreeExtraHeight", "Extra height of a birch tree", false);
	public CustomRandom genBirchTreeCrown = registerRandom("genBirchTreeCrown", "Part of crown generation", false);
	public CustomRandom cactusGeneration = registerRandom("cactusGeneration", "Cactus Generation", false);
	public CustomRandom glowstoneGen = registerRandom("glowstoneGen", "Glowstone Position and Count", false);
	public CustomRandom endIslandPos = registerRandom("endIslandPos", "End Island Pos", false);
	public CustomRandom nettyLeakDetector = registerRandom("nettyLeakDetector", "Sampling interval for leak", false);
	public CustomRandom random_1485 = registerRandom("random_1485", "null", true);
	public CustomRandom deadBushDrop = registerRandom("deadBushDrop", "Quantity of dead bush drop", true);
	public CustomRandom ocelotMeowOrAmbientSound = registerRandom("ocelotMeowOrAmbientSound", "If the cat purrs or does an ambient sound", true);
	public CustomRandom random_977 = registerRandom("random_977", "null", true);
	public CustomRandom random_978 = registerRandom("random_978", "null", true);
	public CustomRandom ocelotTamingChance = registerRandom("ocelotTamingChance", "If taming is successful", true);
	public CustomRandom randomChanceTestCondition = registerRandom("randomChanceTestCondition", "Test Random chance condition", true);
	public CustomRandom glowstoneGen2 = registerRandom("glowstoneGen2", "Glowstone Position and Count", false);
	public CustomRandom chorusQuantityDropped = registerRandom("chorusQuantityDropped", "How many chorus fruit drops when broken", true);
	public CustomRandom llamaChildStrengthBoost = registerRandom("llamaChildStrengthBoost", "How much stronger the child will be", true);
	public CustomRandom llamaChildGrowingUpParticle = registerRandom("llamaChildGrowingUpParticle", "Position of the villager happy particles when feeding a young llama", true);
	public CustomRandom llamaVariantInitial = registerRandom("llamaVariantInitial", "Chooses the initial variant of the llama", true);
	public CustomRandom llamaChestEquipSound = registerRandom("llamaChestEquipSound", "Pitch of equipping sounds from a llama", true);
	public CustomRandom llamaRandomStrength = registerRandom("llamaRandomStrength", "Set's the strength of the llama", true);
	public CustomRandom llamaSpitSound = registerRandom("llamaSpitSound", "Pitch of llama spitting", true);
	public CustomRandom aiPlay = registerRandom("aiPlay", "If entities should play with each other", true);
	public CustomRandom myceliumSpreadPos = registerRandom("myceliumSpreadPos", "Position of next mycelium block", true);
	public CustomRandom genBaseNoiseValue = registerRandom("genBaseNoiseValue", "The basic noise value used for biome generation", false);
	public CustomRandom genBedrockLayer = registerRandom("genBedrockLayer", "The height of the bedrock layer in that current position", false);
	public CustomRandom genSandstone = registerRandom("genSandstone", "How many layers of sandstone should be generated below a block", false);
	public CustomRandom genBigOakTree = registerRandom("genBigOakTree", "If a big oak tree should be generated instead of a normal tree", false);
	public CustomRandom genDifferentFlower = registerRandom("genDifferentFlower", "If a dandelion or a poppy should be generated", false);
	public CustomRandom chorusFruitTeleportCoords = registerRandom("chorusFruitTeleportCoords", "Coords of the player after eating a chorus fruit", true);
	public CustomRandom random_656 = registerRandom("random_656", "null", true);
	public CustomRandom phaseSittingFlamingParticle = registerRandom("phaseSittingFlamingParticle", "Position of dragon breath particles", true);
	public CustomRandom aiEatGrassEatGrass = registerRandom("aiEatGrassEatGrass", "Should eat grass", true);
	public CustomRandom animalXpDropAmount = registerRandom("animalXpDropAmount", "Xp amount from animals after breeding", true);
	public CustomRandom animalHeartParticle = registerRandom("animalHeartParticle", "Particle location and speed of hearts when breeding", true);
	public CustomRandom villagerProfession = registerRandom("villagerProfession", "What profession the villager should have", true);
	public CustomRandom aiBreakDoorSound = registerRandom("aiBreakDoorSound", "If the zombie break door sound should be played", true);
	public CustomRandom scatterynessIgloo = registerRandom("scatterynessIgloo", "Igloo scatteryness", false);
	public CustomRandom brewingStandParticlePositionX = registerRandom("brewingStandParticlePositionX", "Get the X of the position of a particle of a brewing stand", true);
	public CustomRandom brewingStandParticlePositionY = registerRandom("brewingStandParticlePositionY", "Get the Y of the position of a particle of a brewing stand", true);
	public CustomRandom brewingStandParticlePositionZ = registerRandom("brewingStandParticlePositionZ", "Get the Z of the position of a particle of a brewing stand", true);
	public CustomRandom bonemealGrassFlower = registerRandom("bonemealGrassFlower", "If a flower should be added when bonemealing grass", true);
	public CustomRandom bonemealGrassPos = registerRandom("bonemealGrassPos", "The position where the grass should grow", true);
	public CustomRandom grassSpreadPos = registerRandom("grassSpreadPos", "Determines the next block position for grass to spread", true);
	public CustomRandom jukeboxRecordDropPosition = registerRandom("jukeboxRecordDropPosition", "Position of the record when a jukebox releases it", true);
	public CustomRandom pistonSoundExtend = registerRandom("pistonSoundExtend", "Pitch of piston extend sounds", true);
	public CustomRandom pistonSoundRetract = registerRandom("pistonSoundRetract", "Pitch of piston retract sounds", true);
	public CustomRandom portalGenerationPosition = registerRandom("portalGenerationPosition", "Position where a portal should be created", false);
	public CustomRandom genAcasiaTreeHeight = registerRandom("genAcasiaTreeHeight", "Height of acasia tree", false);
	public CustomRandom genAcasiaCrown = registerRandom("genAcasiaCrown", "Acasia leaves generation", false);
	public CustomRandom genAcasiaTrunk = registerRandom("genAcasiaTrunk", "Acasia trunk generation", false);
	public CustomRandom noiseGeneration = registerRandom("noiseGeneration", "Terrain Generation", false);
	public CustomRandom aiTargetDelay = registerRandom("aiTargetDelay", "How long the delay is before entity starts pathfinding", true);
	public CustomRandom enderEyeShatter = registerRandom("enderEyeShatter", "If the ender eye shatters or drops", true);
	public CustomRandom enderEyeParticle = registerRandom("enderEyeParticle", "Particle of ender eye", true);
	public CustomRandom randomFacingPlane = registerRandom("randomFacingPlane", "A random plane direction", true);
	public CustomRandom redstoneOreXpDrop = registerRandom("redstoneOreXpDrop", "Amount of xp dropped by redstone ore", true);
	public CustomRandom restoneOreDrop = registerRandom("restoneOreDrop", "Amount of redstone dropped from ore", true);
	public CustomRandom redstoneOreDropFortuneBonus = registerRandom("redstoneOreDropFortuneBonus", "Amount of redstone dropped from ore with fortune", true);
	public CustomRandom redstoneOreParticles = registerRandom("redstoneOreParticles", "Particles of redstone ore", true);
	public CustomRandom random_569 = registerRandom("random_569", "null", true);
	public CustomRandom itemNegateDamage = registerRandom("itemNegateDamage", "If the item should be damaged when unbreaking is active", true);
	public CustomRandom amplifiedStructureRng = registerRandom("amplifiedStructureRng", "Position of structure for amplified world type", false);
	public CustomRandom random_1379 = registerRandom("random_1379", "null", true);
	public CustomRandom random_1380 = registerRandom("random_1380", "null", true);
	public CustomRandom random_1381 = registerRandom("random_1381", "null", true);
	public CustomRandom random_1382 = registerRandom("random_1382", "null", true);
	public CustomRandom random_1383 = registerRandom("random_1383", "null", true);
	public CustomRandom random_1384 = registerRandom("random_1384", "null", true);
	public CustomRandom random_1385 = registerRandom("random_1385", "null", true);
	public CustomRandom random_1386 = registerRandom("random_1386", "null", true);
	public CustomRandom serverToken = registerRandom("serverToken", "Token for verifying incoming packets", false);
	public CustomRandom random_1482 = registerRandom("random_1482", "null", true);
	public CustomRandom aiMateParticle = registerRandom("aiMateParticle", "When done mating, where the particles spawn", true);
	public CustomRandom enderDragonYaw = registerRandom("enderDragonYaw", "Angle for the ender dragon when spawning", true);
	public CustomRandom horseEatSound = registerRandom("horseEatSound", "Pitch of horse eating", true);
	public CustomRandom horseRearOnAmbient = registerRandom("horseRearOnAmbient", "Make the horse rear randomly", true);
	public CustomRandom horseRearOnGettingHurt = registerRandom("horseRearOnGettingHurt", "If the horse starts rearing after getting hurt", true);
	public CustomRandom horseJumpHeight = registerRandom("horseJumpHeight", "Max jump strength of horse", true);
	public CustomRandom horseMaxHealth = registerRandom("horseMaxHealth", "Max health of the horse", true);
	public CustomRandom horseSpeed = registerRandom("horseSpeed", "Max movement speed of a horse", true);
	public CustomRandom horseChildGrowingUpParticle = registerRandom("horseChildGrowingUpParticle", "Position of the villager happy particles when feeding a young horse", true);
	public CustomRandom horseChild = registerRandom("horseChild", "The horse is a child when spawning", true);
	public CustomRandom horseMoveTailAnimation = registerRandom("horseMoveTailAnimation", "Plays tail animation", true);
	public CustomRandom random_1032 = registerRandom("random_1032", "null", true);
	public CustomRandom posNetherBridge = registerRandom("posNetherBridge", "Position of the Nether Bridge Beginning", false);
	public CustomRandom despawningEntity = registerRandom("despawningEntity", "Depawns entity", true);
	public CustomRandom equipmentDropChance = registerRandom("equipmentDropChance", "If the entity should drop the equipment", true);
	public CustomRandom dropAmount = registerRandom("dropAmount", "Get's the random drops amount", true);
	public CustomRandom experienceAmount = registerRandom("experienceAmount", "Get a random amount of experience", true);
	public CustomRandom applyingEntityAi = registerRandom("applyingEntityAi", "Applies Entity AI", true);
	public CustomRandom followRangeBoost = registerRandom("followRangeBoost", "Adds a follow range boost", true);
	public CustomRandom setEnchantmentBasedOnDifficulty = registerRandom("setEnchantmentBasedOnDifficulty", "Sets enchantment dependant on difficulty", true);
	public CustomRandom setArmorDependingOnDifficulty = registerRandom("setArmorDependingOnDifficulty", "Sets armor depending on difficulty", true);
	public CustomRandom explosionParticle = registerRandom("explosionParticle", "Spawn explosion particles", true);
	public CustomRandom dropEquipmentIfBetter = registerRandom("dropEquipmentIfBetter", "If the item is dropped when a better equipment is available", true);
	public CustomRandom boatSound = registerRandom("boatSound", "Pitch of boat sounds", true);
	public CustomRandom forgeGetChunkSeedFromWorldSeed = registerRandom("forgeGetChunkSeedFromWorldSeed", "Generates values used for the chunk seed", false);
	public CustomRandom forgeSetChunkSeed = registerRandom("forgeSetChunkSeed", "Forge's system to set the chunk seed", false);
	public CustomRandom soundId = registerRandom("soundId", "Chooses a random pointless number for a sound that plays", false);
	public CustomRandom random_1376 = registerRandom("random_1376", "null", true);
	public CustomRandom random_1377 = registerRandom("random_1377", "null", true);
	public CustomRandom aiWanderAvoidWaterFlying = registerRandom("aiWanderAvoidWaterFlying", "If entity looks for a nearby tree", true);
	public CustomRandom random_1264 = registerRandom("random_1264", "null", true);
	public CustomRandom random_816 = registerRandom("random_816", "null", true);
	public CustomRandom clayGeneration = registerRandom("clayGeneration", "Clay Generation (looking at you diamonds)", false);
	public CustomRandom blockupdateLCG = registerRandom("blockupdateLCG", "Linear Congruential Generator seed, for random block updates. Called when joining a World", false);
	public CustomRandom worldSetRandomSeed = registerRandom("worldSetRandomSeed", "General setSeed method of the world random", false);
	public CustomRandom thunderTime = registerRandom("thunderTime", "Length of the weather phase, when thundering", true);
	public CustomRandom clearWeatherTimeAfterThunder = registerRandom("clearWeatherTimeAfterThunder", "Length of the weather phase, after thundering or raining", true);
	public CustomRandom rainTime = registerRandom("rainTime", "Length of the weather phase, when raining", true);
	public CustomRandom clearWeatherTimeAfterRain = registerRandom("clearWeatherTimeAfterRain", "Length of the weather phase, after thundering or raining", true);
	public CustomRandom random_885 = registerRandom("random_885", "null", true);
	public CustomRandom random_886 = registerRandom("random_886", "null", true);
	public CustomRandom random_887 = registerRandom("random_887", "null", true);
	public CustomRandom random_888 = registerRandom("random_888", "null", true);
	public CustomRandom worldGeneration = registerRandom("worldGeneration", "Basic World Generation", false);
	public CustomRandom worldSeedManip = registerRandom("worldSeedManip", "Modifies the world seed", false);
	public CustomRandom posEndCity = registerRandom("posEndCity", "Position of the End City Beginning", false);
	public CustomRandom liquidExtinguishSound = registerRandom("liquidExtinguishSound", "Pitch of the sound when combining water and lava", true);
	public CustomRandom lavaParticlePos = registerRandom("lavaParticlePos", "Postion of lava particle", true);
	public CustomRandom biomePlainsGenGrass = registerRandom("biomePlainsGenGrass", "Grass generation in plains", false);
	public CustomRandom biomePlainsGenBigtree = registerRandom("biomePlainsGenBigtree", "If a big tree should generate in plains", false);
	public CustomRandom biomePlainsGenFlowers = registerRandom("biomePlainsGenFlowers", "What flowers should generate", false);
	public CustomRandom slimeSpawnModifier = registerRandom("slimeSpawnModifier", "Whether a slime can spawn here", true);
	public CustomRandom enchantmentDamageArthropodSlownessDuration = registerRandom("enchantmentDamageArthropodSlownessDuration", "Duration of slowness effect when hitting arthropod enemies", true);
	public CustomRandom boneMealSapling = registerRandom("boneMealSapling", "Chance of a sapling growing after being bonemealed", true);
	public CustomRandom growBigOakTreeFromSapling = registerRandom("growBigOakTreeFromSapling", "If a tree is big or not when a sapling is grown", true);
	public CustomRandom megaSpruceTreeCrownSizeFromSapling = registerRandom("megaSpruceTreeCrownSizeFromSapling", "How big the leaf crown of a mega spruce tree is", true);
	public CustomRandom jungleMinimumTreeHeightFromSapling = registerRandom("jungleMinimumTreeHeightFromSapling", "The minimum height of a jungle tree from a jungle sapling", true);
	public CustomRandom growTreeChance = registerRandom("growTreeChance", "Determines when a sapling grows into a tree", true);
	public CustomRandom random_636 = registerRandom("random_636", "null", true);
	public CustomRandom random_637 = registerRandom("random_637", "null", true);
	public CustomRandom random_638 = registerRandom("random_638", "null", true);
	public CustomRandom random_639 = registerRandom("random_639", "null", true);
	public CustomRandom random_640 = registerRandom("random_640", "null", true);
	public CustomRandom random_641 = registerRandom("random_641", "null", true);
	public CustomRandom random_642 = registerRandom("random_642", "null", true);
	public CustomRandom random_643 = registerRandom("random_643", "null", true);
	public CustomRandom enchantmentTableTileBookSpread = registerRandom("enchantmentTableTileBookSpread", "Whether the book on the enchanter should open", true);
	public CustomRandom enchantmentTableTileFlipT = registerRandom("enchantmentTableTileFlipT", "If the pages of the book should flip", false);
	public CustomRandom lootCreateRoll = registerRandom("lootCreateRoll", "Creates a loot roll dependant on weight", true);
	public CustomRandom random_832 = registerRandom("random_832", "null", true);
	public CustomRandom random_833 = registerRandom("random_833", "null", true);
	public CustomRandom ravineGeneration = registerRandom("ravineGeneration", "Ravine Generation", false);
	public CustomRandom random_829 = registerRandom("random_829", "null", true);
	public CustomRandom random_820 = registerRandom("random_820", "null", true);
	public CustomRandom random_821 = registerRandom("random_821", "null", true);
	public CustomRandom random_822 = registerRandom("random_822", "null", true);
	public CustomRandom random_823 = registerRandom("random_823", "null", true);
	public CustomRandom random_824 = registerRandom("random_824", "null", true);
	public CustomRandom random_825 = registerRandom("random_825", "null", true);
	public CustomRandom random_826 = registerRandom("random_826", "null", true);
	public CustomRandom random_827 = registerRandom("random_827", "null", true);
	public CustomRandom random_828 = registerRandom("random_828", "null", true);
	public CustomRandom firePosNether = registerRandom("firePosNether", "Fire Position in the Nether", false);
	public CustomRandom random_395 = registerRandom("random_395", "null", true);
	public CustomRandom random_396 = registerRandom("random_396", "null", true);
	public CustomRandom random_461 = registerRandom("random_461", "null", true);
	public CustomRandom random_460 = registerRandom("random_460", "null", true);
	public CustomRandom random_1512 = registerRandom("random_1512", "null", true);
	public CustomRandom random_1513 = registerRandom("random_1513", "null", true);
	public CustomRandom random_1514 = registerRandom("random_1514", "null", true);
	public CustomRandom random_1511 = registerRandom("random_1511", "null", true);
	public CustomRandom random_1509 = registerRandom("random_1509", "null", true);
	public CustomRandom random_1510 = registerRandom("random_1510", "null", true);
	public CustomRandom slimeSoundAttack = registerRandom("slimeSoundAttack", "Pitch of slime attack sound", true);
	public CustomRandom slimeSpawnFlatWorld = registerRandom("slimeSpawnFlatWorld", "Whether slimes spawn in a flat world", true);
	public CustomRandom slimeJumpDelay = registerRandom("slimeJumpDelay", "A delay between jumps of the slime", true);
	public CustomRandom slimeWaterSplashEffect = registerRandom("slimeWaterSplashEffect", "Does a water splash effect when slime is in water", true);
	public CustomRandom slimeSize = registerRandom("slimeSize", "How big the slime is when spawning", true);
	public CustomRandom slimeParticle = registerRandom("slimeParticle", "Position of slime particle on slimes duh", true);
	public CustomRandom slimeSplitting = registerRandom("slimeSplitting", "How many slimes will be spawned after splitting up", true);
	public CustomRandom fishHookTicksCatchableRain = registerRandom("fishHookTicksCatchableRain", "The time it takes to count down the fishing delay when raining", true);
	public CustomRandom fishHookLoot = registerRandom("fishHookLoot", "What the next fished item is", true);
	public CustomRandom fishHookBobbingMotion = registerRandom("fishHookBobbingMotion", "How much the fish hook is bobbing", true);
	public CustomRandom fishHookMotion = registerRandom("fishHookMotion", "Motion of the fishhook when casting", true);
	public CustomRandom vaporizationParticlePitch = registerRandom("vaporizationParticlePitch", "Pitch of the fluid vaporization sound", true);
	public CustomRandom vaporizationParticlePosition = registerRandom("vaporizationParticlePosition", "Position of the fluid vaporization particle", true);
	public CustomRandom random_333 = registerRandom("random_333", "null", true);
	public CustomRandom biomeDecoration = registerRandom("biomeDecoration", "Biome Decoration", false);
	public CustomRandom fossilGenRandom = registerRandom("fossilGenRandom", "Random Position, Rotation and type of Fossil", false);
	public CustomRandom aiMoveIndoors = registerRandom("aiMoveIndoors", "If the entity should run indoors", true);
	public CustomRandom random_853 = registerRandom("random_853", "null", true);
	public CustomRandom random_854 = registerRandom("random_854", "null", true);
	public CustomRandom random_361 = registerRandom("random_361", "null", true);
	public CustomRandom random_941 = registerRandom("random_941", "null", true);
	public CustomRandom random_942 = registerRandom("random_942", "null", true);
	public CustomRandom random_943 = registerRandom("random_943", "null", true);
	public CustomRandom creeperDropRecord = registerRandom("creeperDropRecord", "Which record is dropped after dying from a skeleton", true);
	public CustomRandom creeperSoundPitch = registerRandom("creeperSoundPitch", "Pitch of the flint and steel using sound thingy when igniting a creeper", true);
	public CustomRandom chickenLaysFirstEgg = registerRandom("chickenLaysFirstEgg", "Time until the chicken lays its first egg", true);
	public CustomRandom chickenEggSound = registerRandom("chickenEggSound", "Pitch of chicken laying an egg", true);
	public CustomRandom genBigTreeGenerateNextSeed = registerRandom("genBigTreeGenerateNextSeed", "Advances the randomness to the next seed?", false);
	public CustomRandom genBigTreeHeightLimit = registerRandom("genBigTreeHeightLimit", "Height limit for big trees", false);
	public CustomRandom genBigTreeLeafNodes = registerRandom("genBigTreeLeafNodes", "Some leaf generation", false);
	public CustomRandom lilypadGeneration = registerRandom("lilypadGeneration", "Lilypad Generation", false);
	public CustomRandom blockDropItemChance = registerRandom("blockDropItemChance", "If a drop should be dropped", true);
	public CustomRandom blockDropPosition = registerRandom("blockDropPosition", "Where the spawned item should spawn", true);
	public CustomRandom snowmanSpawnParticles = registerRandom("snowmanSpawnParticles", "Position of snow particles when spawning a snowman", true);
	public CustomRandom ironGolemSpawnParticles = registerRandom("ironGolemSpawnParticles", "Position of snowball particles when spawning an iron golem", true);
	public CustomRandom magmaExtinguish = registerRandom("magmaExtinguish", "Pitch of the sound when water flows over magma", true);
	public CustomRandom pigBoostTime = registerRandom("pigBoostTime", "How long the pig boosts when riding it with a carrot on a stick", true);
	public CustomRandom ghastSpawning = registerRandom("ghastSpawning", "Whether the ghast can spawn at this location", true);
	public CustomRandom random_860 = registerRandom("random_860", "null", true);
	public CustomRandom random_861 = registerRandom("random_861", "null", true);
	public CustomRandom random_862 = registerRandom("random_862", "null", true);
	public CustomRandom random_674 = registerRandom("random_674", "null", true);
	public CustomRandom reedGeneration = registerRandom("reedGeneration", "reedGeneration", false);
	public CustomRandom lightningBoltVertex = registerRandom("lightningBoltVertex", "Rendering randomness", true);
	public CustomRandom lightningBoltSound = registerRandom("lightningBoltSound", "Pitch of thunder and impact sounds", true);
	public CustomRandom squidIdioticSetSeed = registerRandom("squidIdioticSetSeed", "Sets the seed of the random for no good reason "+net.minecraft.util.text.TextFormatting.RED+"Squids are evil!", true);
	public CustomRandom squidInitRotationVelocity = registerRandom("squidInitRotationVelocity", "Initial rotation velocity of the squid. "+net.minecraft.util.text.TextFormatting.RED+"Squids are evil!", true);
	public CustomRandom squidShouldChangeRotationVelocity = registerRandom("squidShouldChangeRotationVelocity", "If the rotation should be changed. "+net.minecraft.util.text.TextFormatting.RED+"Squids are evil!", true);
	public CustomRandom randomChanceWithLootingTestCondition = registerRandom("randomChanceWithLootingTestCondition", "Test Random chance condition with looting", true);
	public CustomRandom phaseSittingAttackingGrowlSound = registerRandom("phaseSittingAttackingGrowlSound", "Pitch of the dragon growl", true);
	public CustomRandom registryGetRandomObject = registerRandom("registryGetRandomObject", "Gets a random registry value from the mc registry", true);
	public CustomRandom spiderEffect = registerRandom("spiderEffect", "Random effect from a spider, when spawning naturally", true);
	public CustomRandom math_random_16 = registerRandom("math_random_16", "null", true);
	public CustomRandom math_random_17 = registerRandom("math_random_17", "null", true);
	public CustomRandom math_random_18 = registerRandom("math_random_18", "null", true);
	public CustomRandom math_random_19 = registerRandom("math_random_19", "null", true);
	public CustomRandom itemMotionInLava = registerRandom("itemMotionInLava", "X and y motion when dropping an item in lava", true);
	public CustomRandom arrowCritDamage = registerRandom("arrowCritDamage", "Get the damage of a critical arrow", true);
	public CustomRandom arrowMotion = registerRandom("arrowMotion", "Add a random amount of force to the shot", true);
	public CustomRandom arrowEnchantmentDamage = registerRandom("arrowEnchantmentDamage", "Damage of arrow with enchantments", true);
	public CustomRandom arrowInaccuracy = registerRandom("arrowInaccuracy", "Add inaccuracy to the shot", true);
	public CustomRandom throwableMotion = registerRandom("throwableMotion", "General speed when throwing something", true);
	public CustomRandom throwableInaccuracy = registerRandom("throwableInaccuracy", "General inaccuracy to a thowable entity", true);
	public CustomRandom endermiteParticle = registerRandom("endermiteParticle", "Position of 'Portal' particles on an endermite", true);
	public CustomRandom paintingDisplay = registerRandom("paintingDisplay", "Which art will be displayed", true);
	public CustomRandom random_591 = registerRandom("random_591", "null", true);
	public CustomRandom random_592 = registerRandom("random_592", "null", true);
	public CustomRandom math_random_23 = registerRandom("math_random_23", "null", true);
	public CustomRandom math_random_24 = registerRandom("math_random_24", "null", true);
	public CustomRandom math_random_25 = registerRandom("math_random_25", "null", true);
	public CustomRandom initialStructureRandomSuperflat = registerRandom("initialStructureRandomSuperflat", "Calculates the Position of structures in a new chunk, on a superflat world", false);
	public CustomRandom random_709 = registerRandom("random_709", "null", true);
	public CustomRandom aiAttackCheckForTargets = registerRandom("aiAttackCheckForTargets", "Between a lot of conditions, the chance for the entity to update the target", true);
	public CustomRandom random_565 = registerRandom("random_565", "null", true);
	public CustomRandom random_564 = registerRandom("random_564", "null", true);
	public CustomRandom snowmanShootSound = registerRandom("snowmanShootSound", "Pitch of snowman shooting sound", true);
	public CustomRandom ironGolemDamage = registerRandom("ironGolemDamage", "Adds random damage to the base damage", true);
	public CustomRandom golemSetAttackTarget = registerRandom("golemSetAttackTarget", "Sets the attack target if a monster collides with the iron golem", true);
	public CustomRandom ironGolemParticlesEnabled = registerRandom("ironGolemParticlesEnabled", "Whether particles will be shown", true);
	public CustomRandom ironGolemHomeCheck = registerRandom("ironGolemHomeCheck", "How long it takes until the golem checks where his home is", true);
	public CustomRandom bushGeneration = registerRandom("bushGeneration", "Bush Generation", false);
	public CustomRandom random_1387 = registerRandom("random_1387", "null", true);
	public CustomRandom random_1388 = registerRandom("random_1388", "null", true);
	public CustomRandom random_1389 = registerRandom("random_1389", "null", true);
	public CustomRandom random_1390 = registerRandom("random_1390", "null", true);
	public CustomRandom random_1391 = registerRandom("random_1391", "null", true);
	public CustomRandom random_1392 = registerRandom("random_1392", "null", true);
	public CustomRandom random_805 = registerRandom("random_805", "null", true);
	public CustomRandom random_806 = registerRandom("random_806", "null", true);
	public CustomRandom random_807 = registerRandom("random_807", "null", true);
	public CustomRandom random_808 = registerRandom("random_808", "null", true);
	public CustomRandom netherPortalPiglin = registerRandom("netherPortalPiglin", "Chance of piglin spawning in the nether portal", true);
	public CustomRandom frostedIceMeltChance = registerRandom("frostedIceMeltChance", "Chance for frosted ice to melt", true);
	public CustomRandom math_random_11 = registerRandom("math_random_11", "null", true);
	public CustomRandom math_random_12 = registerRandom("math_random_12", "null", true);
	public CustomRandom math_random_13 = registerRandom("math_random_13", "null", true);
	public CustomRandom math_random_14 = registerRandom("math_random_14", "null", true);
	public CustomRandom xpOrbMotionInLava = registerRandom("xpOrbMotionInLava", "X and y motion when xpOrbs in lava", true);
	public CustomRandom math_random_15 = registerRandom("math_random_15", "null", true);
}
