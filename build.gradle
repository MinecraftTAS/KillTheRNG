plugins {
	// loom plugin
    id 'fabric-loom' version "${loom_version}"
    // legacy looming (loom plugin improvements)
    id 'legacy-looming' version "${loom_version}"
	id "maven-publish"
}

// set basic properties
version = project.version
group = project.group

// compile for java 8
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

loom {
	// set access widener
	accessWidenerPath = file('src/main/resources/killtherng.accesswidener')
	// add log4jconfig
	log4jConfigs.from(file('src/main/resources/log4j.xml'))
}

repositories {
    mavenCentral()
    maven { url = 'https://raw.githubusercontent.com/BleachDev/cursed-mappings/main/' }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.mgnet.work/main" }
    maven { url = 'https://repo.spongepowered.org/maven' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.minecraft_version}+build.mcp"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version

    filesMatching("fabric.mod.json") {
        expand 'mod_url': project.mod_url, 'name': project.mod_name, 'mod_version': project.version, 'mod_description': project.mod_description, 'mod_sources': project.mod_sources, 'mod_email': project.mod_email
    }
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

java {

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// Select the repositories you want to publish to
	repositories {
		// Uncomment to publish to the local maven
		// mavenLocal()
	}
}
